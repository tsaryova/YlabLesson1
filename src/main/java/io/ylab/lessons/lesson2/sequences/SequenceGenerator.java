package io.ylab.lessons.lesson2.sequences;

public interface SequenceGenerator {

    /**
     * Выводит в консоль n первых членов последовательности A (каждый следующий элемент последовательности увлечивается на 2 начиная с 2)
     * 2, 4, 6, 8...
     *
     * @param n число членов последовательности для вывода
     */
    void a(int n);

    /**
     * Выводит в консоль n первых членов последовательности B (каждый следующий элемент последовательности увлечивается на 2 начиная с 1)
     * 1, 3, 5, 7...
     *
     * @param n число членов последовательности для вывода
     */
    void b(int n);

    /**
     * Выводит в консоль n первых членов последовательности C (каждый следующий элемент последовательности квадрат числа, начиная c 1)
     * 1, 4, 9, 16...
     *
     * @param n число членов последовательности для вывода
     */
    void c(int n);

    /**
     * Выводит в консоль n первых членов последовательности D (каждый следующий элемент последовательности куб числа, начиная с 1)
     * 1, 8, 27, 64...
     *
     * @param n число членов последовательности для вывода
     */
    void d(int n);

    /**
     * Выводит в консоль n первых членов последовательности E (чередование 1, -1)
     * 1, -1, 1, -1...
     *
     * @param n число членов последовательности для вывода
     */
    void e(int n);

    /**
     * Выводит в консоль n первых членов последовательности F (числа по порядку с 1, каждое четное число со знаком "-")
     * 1, -2, 3, -4...
     *
     * @param n число членов последовательности для вывода
     */
    void f(int n);

    /**
     * Выводит в консоль n первых членов последовательности G (каждый следующий элемент последовательности квадрат числа, начиная c 1,
     * каждое четное число со знаком "-")
     * 1, -4, 9, -16...
     *
     * @param n число членов последовательности для вывода
     */
    void g(int n);

    /**
     * Выводит в консоль n первых членов последовательности H (последовательность по порядку, начиная с 1, на четных местах - 0)
     * 1, 0, 2, 0, 3, 0...
     *
     * @param n число членов последовательности для вывода
     */
    void h(int n);

    /**
     * Выводит в консоль n первых членов последовательности I (следующий элемент последовательности - умножение предшедствующего значения на номер позиции,
     * номер позиции начинается с 1)
     * 1, 2, 6, 24, 120, 720...
     *
     * @param n число членов последовательности для вывода
     */
    void i(int n);

    /**
     * Выводит в консоль n первых членов последовательности J (каждый элемент последовательности - сумма двух предыдущих элементов, начиная с 1)
     * 1, 1, 2, 3, 5, 8, 13...
     *
     * @param n число членов последовательности для вывода
     */
    void j(int n);

}
